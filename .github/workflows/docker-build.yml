name: Backend CI/CD Pipeline
on:
  push:
    paths:
      - 'CafeManagement/**'
    branches: [ "main" ]
  pull_request:
    paths:
      - 'CafeManagement/**'
    branches: [ "main" ]
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'zulu'

    - name: Install SonarCloud scanner
      run: |
        dotnet tool install --global dotnet-sonarscanner
        dotnet tool install --global dotnet-coverage

    - name: Begin SonarCloud analysis
      working-directory: ./CafeManagement
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet sonarscanner begin \
        /k:"thilandakshina_GIC.Cafe.Employee" \
        /o:"thilandakshina-1" \
        /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
        /d:sonar.host.url="https://sonarcloud.io" \
        /d:sonar.cs.vstest.reportsPaths="./TestResults/*.trx" \
        /d:sonar.cs.opencover.reportsPaths="./TestResults/**/coverage.opencover.xml" \
        /d:sonar.coverage.exclusions="**Test*.cs,**/Program.cs" \
        /d:sonar.sourceEncoding="UTF-8" \
        /d:sonar.exclusions="**/Cafe.Domain/**/*,**/Cafe.Infrastructure/**/*" \
        /d:sonar.cpd.exclusions="**/Cafe.Domain/**/*,**/Cafe.Infrastructure/**/*"
        
    - name: Restore dependencies
      working-directory: ./CafeManagement
      run: dotnet restore Cafe.API/Cafe.API.csproj
      
    - name: Build
      working-directory: ./CafeManagement
      run: dotnet build Cafe.API/Cafe.API.csproj --no-restore --configuration Release
      
    - name: Test
      working-directory: ./CafeManagement
      run: |
        mkdir -p TestResults
        dotnet test Cafe.Application.Test/Cafe.Application.Test.csproj \
        --configuration Release \
        --collect:"XPlat Code Coverage;Format=opencover" \
        --logger "trx;LogFileName=test_results.trx" \
        --results-directory ./TestResults

    - name: End SonarCloud analysis
      working-directory: ./CafeManagement
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: ./CafeManagement/TestResults
        
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./CafeManagement
        file: ./CafeManagement/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/cafe-api:latest